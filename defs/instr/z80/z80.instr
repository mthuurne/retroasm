# The Zilog Z80 is an 8-bit microprocessor used in many different machines.
# It was popular in the late 1970s and early 1980s.
#
# The grouping in this instruction set definition matches the sections in Sean
# Young's "The Undocumented Z80 Documented" (maintained by Jan Wilmans).
#   http://www.myquest.nl/z80undocumented/


### Registers

reg
# flags:
u1  sf  zf  yf  hf  xf  pf  nf  cf
u1  sf' zf' yf' hf' xf' pf' nf' cf'
u8  f   = sf  ; zf  ; yf  ; hf  ; xf  ; pf  ; nf  ; cf
u8  f'  = sf' ; zf' ; yf' ; hf' ; xf' ; pf' ; nf' ; cf'
# main registers:
u8  a   b   c   d   e   h   l
u8  a'  b'  c'  d'  e'  h'  l'
u16 af  = a  ; f
u16 af' = a' ; f'
u16 bc  = b  ; c
u16 bc' = b' ; c'
u16 de  = d  ; e
u16 de' = d' ; e'
u16 hl  = h  ; l
u16 hl' = h' ; l'
# index registers:
u8  ixh ixl iyh iyl
u16 ix  = ixh ; ixl
u16 iy  = iyh ; iyl
# special registers:
u8  i   r
u16 sp  pc
# interrupt flags and mode:
u1  iff1    iff2
u2  im


### I/O

io
u8 mem[u16]
u8 port[u8]


### Operand mappings

# 16-bit memory access

func u16 read16(u16 A)
    var u8 L := mem[A]
    var u8 H := mem[A + 1]
    ret := H ; L

func write16(u16 A, u16 V)
    mem[A]     := V[0:8]
    mem[A + 1] := V[8:16]

func write16_rev(u16 A, u16 V)
    mem[A + 1] := V[8:16]
    mem[A]     := V[0:8]

func push(u16 V)
    sp := sp - 2
    write16_rev(sp, V)

func pop(u16& R)
    R := read16(sp)
    sp := sp + 2

# 8-bit registers

# TODO: IX and IY are missing.

mode reg8
%000        . b
%001        . c
%010        . d
%011        . e
%100        . h
%100        . ixh           .               . ?ix
%100        . iyh           .               . ?iy
%101        . l
%101        . ixl           .               . ?ix
%101        . iyl           .               . ?iy
%110        . (hl)          . mem[hl]
%111        . a

# 16-bit registers

mode reg16
%00         . bc
%01         . de
%10         . hl
%11         . sp

mode hlx
            . hl
            . ix            .               . ?ix
            . iy            .               . ?iy

mode reg16x
R           . R             . R             . reg16 R
%10         . R             . R             . hlx R

mode reg16af
R           . R             . R             . reg16x R
%11         . af

# Condition codes

mode cond2
%00         . nz            . !zf
%01         . z             .  zf
%10         . nc            . !cf
%11         . c             .  cf

mode cond3
%0;C        . C             .               . cond2 C
%100        . po            . !pf
%101        . pe            .  pf
%110        . p             . !sf
%111        . m             .  sf
