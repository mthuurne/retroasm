# The Ricoh 2A03/2A07 is the SoC used in the NES/FC console.
# It uses the 6502 instruction set minus the BCD support.


### Registers

reg
# accumulator
u8  a
# index registers
u8  x y
# flags
u1  n v b d i z c
u8  p = n ; v ; %1 ; b ; d ; i ; z ; c
# stack pointer
u8  s
u16 sp = $01;s
# program counter
u16 pc


### I/O

io
u8 mem[u16]


### Stack access

func push(u8 V)
    mem[sp] := V
    s := s - 1

func pull(u8& D)
    s := s + 1
    D := mem[sp]


### Addressing modes

mode immediate
N                   . \#N               . N                 . u8 N

mode zeropage
A                   . A                 . mem[A]            . u8 A

mode zeropage_x
A                   . A,x               . mem[(A+x)[:8]]    . u8 A

mode absolute
A[:8], A[8:]        . A                 . mem[A]            . u16 A

mode absolute_x
A[:8], A[8:]        . A,x               . mem[A+x]          . u16 A

mode absolute_y
A[:8], A[8:]        . A,y               . mem[A+y]          . u16 A

func u16 indx(u8 A)
    def u8 L = mem[(A+x  )[:8]]
    def u8 H = mem[(A+x+1)[:8]]
    ret := H;L

mode indexed_indirect
A                   . (A,x)             . mem[indx(A)]      . u8 A

func u16 indy(u8 A)
    def u8 L = mem[A]
    def u8 H = mem[(A+1)[:8]]
    ret := H;L + y

mode indirect_indexed
A                   . (A),y             . mem[indy(A)]      . u8 A


### Set and clear flags

instr
%000;%110;%00       . clc               . c := 0
%001;%110;%00       . sec               . c := 1
%010;%110;%00       . cli               . i := 0
%011;%110;%00       . sei               . i := 1
%101;%110;%00       . clv               . v := 0
%110;%110;%00       . cld               . d := 0
%111;%110;%00       . sed               . d := 1
