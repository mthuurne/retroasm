[MESSAGES CONTROL]

# Enable the message, report, category or checker with the given id(s). You can
# either give multiple identifier separated by comma (,) or put this option
# multiple time. See also the "--disable" option for examples.
#enable=

# Disable the message, report, category or checker with the given id(s). You
# can either give multiple identifiers separated by comma (,) or put this
# option multiple times (only on the command line, not in the configuration
# file where it should appear only once).You can also use "--disable=all" to
# disable everything first and then reenable specific checks. For example, if
# you want to run only the similarities checker, you can use "--disable=all
# --enable=similarities". If you want to run only the classes checker, but have
# no Warning level messages displayed, use"--disable=all --enable=classes
# --disable=W"
disable=
    # Not all of these are easy to fix, especially in the short term.
    # There is no need to show them every time:
        design,
        fixme,
        invalid-name,
        protected-access,
        too-many-lines,
    # Eventually all public API should have docstrings, but I don't want to spend
    # too much time documenting interfaces that are still going to radically change.
        missing-docstring,
    # I like symmetry:
        no-else-break,
        no-else-continue,
        no-else-raise,
        no-else-return,
    # Too many false positives:
        similarities,

[BASIC]

# Regular expression matching correct function names
function-rgx=[a-z_][A-Za-z0-9_]{2,40}$

# Regular expression matching correct attribute names
attr-rgx=[a-z_][A-Za-z0-9_]{2,40}$

# Regular expression matching correct module names
module-rgx=([a-z_][a-z0-9_]*)$

# Regular expression matching correct variable names
variable-rgx=[a-z_][A-Za-z0-9_]{1,40}$

# Regular expression matching correct inline iteration names
inlinevar-rgx=[a-z_][A-Za-z0-9_]*$

# Regular expression matching correct constant names
const-rgx=([a-z_][A-Za-z0-9_]*)$

# Regular expression matching correct argument names
argument-rgx=[a-z_][A-Za-z0-9_]{1,40}$

# Regular expression matching correct method names
method-rgx=([a-z_][A-Za-z0-9_]{2,40})$


[VARIABLES]

# A regular expression matching the beginning of the name of dummy variables
# (i.e. not used).
dummy-variables-rgx=_(.*)$


[FORMAT]

# Maximum number of characters on a single line.
max-line-length=88
